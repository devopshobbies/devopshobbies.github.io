name: Deploy Next.js site to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: "if [ -f \"${{ github.workspace }}/pnpm-lock.yaml\" ]; then\n  echo \"manager=pnpm\" >> $GITHUB_OUTPUT\n  echo \"command=install --frozen-lockfile\" >> $GITHUB_OUTPUT\n  echo \"runner=pnpm exec\" >> $GITHUB_OUTPUT\n  exit 0\nelif [ -f \"${{ github.workspace }}/yarn.lock\" ]; then\n  echo \"manager=yarn\" >> $GITHUB_OUTPUT\n  echo \"command=install\" >> $GITHUB_OUTPUT\n  echo \"runner=yarn\" >> $GITHUB_OUTPUT\n  exit 0\nelif [ -f \"${{ github.workspace }}/package.json\" ]; then\n  echo \"manager=npm\" >> $GITHUB_OUTPUT\n  echo \"command=ci\" >> $GITHUB_OUTPUT\n  echo \"runner=npx --no-install\" >> $GITHUB_OUTPUT\n  exit 0\nelse\n  echo \"Unable to determine package manager\"\n  exit 1\nfi\n  \n"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup pnpm
        if: steps.detect-package-manager.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            # pnpm specific cache location
            ~/.pnpm-store
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/yarn.lock', '**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/yarn.lock', '**/package-lock.json') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
